
AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'Create Tables in RDS Mysql'
Resources:
  CreateTableRDSLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: 'tests3-s3bucket-t9ne2v3mb47y'
        S3Key: 'create-table-rds.zip'
      Handler: create-table-rds.handler
      Role: !GetAtt 'LambdaExecutionRole.Arn'
      Runtime: python3.6
      Timeout: '30'
      Environment:
        Variables:
          DBName: 
            Fn::ImportValue: 
              !Sub "testrds-DBName"
          DBUser: 
            Fn::ImportValue: 
              !Sub "testrds-DBUser"
          DBPassword: 
            Fn::ImportValue: 
              !Sub "testrds-DBPassword"
          DBEndpoint: 
            Fn::ImportValue: 
              !Sub "testrds-DBEndpoint" 
      VpcConfig:
        SecurityGroupIds:
        - Fn::ImportValue: 
            !Sub "testrds-DBSecurityGroupId"
        SubnetIds:
        - 'subnet-2db18067'
        - 'subnet-56db6f2d'
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: '*'