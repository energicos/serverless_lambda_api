AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda Template'
Parameters:
  RDSStackName:
    Type: String
  S3Bucket:
    Type: String
  LambdaName:
    Type: String
Resources:
  # Get All Accounts Lambda
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Join [".", [!Ref LambdaName,"zip"]]
      Handler: !Join [".", [!Ref LambdaName,"handler"]]
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.6
      Timeout: '30'
      Environment:
        Variables:
          DBName:
            Fn::ImportValue:
              !Join ["-", [!Ref RDSStackName, "DBName"]]
          DBUser:
            Fn::ImportValue:
              !Join ["-", [!Ref RDSStackName, "DBUser"]]
          DBPassword:
            Fn::ImportValue:
              !Join ["-", [!Ref RDSStackName, "DBPassword"]]
          DBEndpoint:
            Fn::ImportValue:
              !Join ["-", [!Ref RDSStackName, "DBEndpoint"]]
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: '*'
Outputs:
  LambdaArn:
    Value: !GetAtt [Lambda, Arn]
